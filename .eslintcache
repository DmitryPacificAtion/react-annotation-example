[{"/home/kenobi/working/test-annotations/src/index.tsx":"1","/home/kenobi/working/test-annotations/src/reportWebVitals.ts":"2","/home/kenobi/working/test-annotations/src/App.tsx":"3","/home/kenobi/working/test-annotations/src/components/index.ts":"4","/home/kenobi/working/test-annotations/src/components/Header/index.tsx":"5","/home/kenobi/working/test-annotations/src/components/Canvas/index.tsx":"6","/home/kenobi/working/test-annotations/src/components/Header/UploadButton/index.tsx":"7"},{"size":500,"mtime":1607021021043,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607014951197,"results":"10","hashOfConfig":"9"},{"size":372,"mtime":1607024150019,"results":"11","hashOfConfig":"9"},{"size":52,"mtime":1607021055521,"results":"12","hashOfConfig":"9"},{"size":327,"mtime":1607021074392,"results":"13","hashOfConfig":"9"},{"size":2429,"mtime":1607035887422,"results":"14","hashOfConfig":"9"},{"size":351,"mtime":1607021181497,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nq638j",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kenobi/working/test-annotations/src/index.tsx",[],"/home/kenobi/working/test-annotations/src/reportWebVitals.ts",[],"/home/kenobi/working/test-annotations/src/App.tsx",[],"/home/kenobi/working/test-annotations/src/components/index.ts",[],["32","33"],"/home/kenobi/working/test-annotations/src/components/Header/index.tsx",[],"/home/kenobi/working/test-annotations/src/components/Canvas/index.tsx",["34"],"import React, { useRef, useEffect } from 'react';\nimport css from './styles.module.scss';\nimport mock from './mock2.jpg';\n\nexport const Canvas = () => {\n  const { container } = css;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      if(canvas && canvas.getContext) {\n        const ctx = canvas.getContext('2d');\n        const img = new Image();\n        img.src = mock;\n        console.log(img);\n        img.addEventListener('load', () => {\n        },false);\n        // ctx.drawImage(img);\n        // console.log('ctx', ctx);\n      }\n    }\n  });\n\n  return (\n    <section>\n      <canvas ref={canvasRef} className={container} />\n    </section>\n  )\n}\n","/home/kenobi/working/test-annotations/src/components/Header/UploadButton/index.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":15,"nodeType":"41","messageId":"42","endLine":12,"endColumn":18},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'ctx' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]